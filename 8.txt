#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<fcntl.h>

#define MAX_SIZE 100

int main()
{
	char filename[]="file.txt";
	int fd,new_fd;
	char buffer[MAX_SIZE];
	ssize_t bytes_read;
	int n;

	printf("Enter the number of characters to read and append:");
	scanf("%d",&n);

	fd=open(filename,O_RDWR);
	if(fd==-1)
	{
		perror("Error opening file");
		exit(EXIT_FAILURE);
	}

	lseek(fd,0,SEEK_END);

	new_fd=dup(fd);

	if(new_fd==-1)
	{
		perror("Error duplicating file descriptor");
		close(fd);
		exit(EXIT_FAILURE);
	}

	lseek(fd,-n,SEEK_END);

	bytes_read=read(fd,buffer,n);

	if(bytes_read==-1)
	{
		perror("Error reading file");
		close(fd);
		close(new_fd);
		exit(EXIT_FAILURE);
	}

	if(write(new_fd,buffer,bytes_read)!=bytes_read)
	{
		perror("Error writing to file");
		close(fd);
		close(new_fd);
		exit(EXIT_FAILURE);
	}

	close(fd);
	close(new_fd);
	printf("%d characters read and appended successfully.\n",(int)bytes_read);
	return 0;
}

-----------------

#include<stdio.h>
#include<stdlib.h>
#include<dirent.h>

int main(){
        DIR *dir;
        struct dirent *entry;

        dir=opendir(".");

        if(dir==NULL){
                perror("Error opening directory");
                exit(EXIT_FAILURE);
        }

        while((entry=readdir(dir))!=NULL)
        {
                printf("%s\n",entry->d_name);
        }

        closedir(dir);

        return 0;
}
